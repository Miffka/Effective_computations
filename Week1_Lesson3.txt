Лекция урока 3 недели 1

Иногда возникает необходимость взаимодействовать с приложениями, запущенными в контейнере. Таких способов 3:
1) взаимодействие с помощью портов - взаимодействие веб-сервера с портом 80
2) взаимодействие при помощи командной строки - полезен для отладки
3) взаимодействие нескольких контейнеров - обсуждение в видео!

docker run -d --name port-export -p <port_on_host_machine>:<port_inside_container> image - запустить в режиме демона и пробросить порты контейнера при запуске

I)
Задание 1.
sudo docker run --rm -d --name port-export -p 80:80 parseq/stepik-ports-docker

docker exec -it <container-name> bash - подключение к уже запущенному контейнеру

II)
Задание 2.
sudo docker run -d --rm parseq/stepik-exec-docker
docker exec -it serene_shannon bash
psql -U postgres -c '\dt'
psql -U postgres -c 'SELECT * FROM answers'

III)
Взаимодействие между контейнерами - сетевое взаимодействие.
Сетевое взаимодействие:
7 уровней взаимодействия, на практике используется 4 уровня TCP/IP.

Уровни модели	Уровни стека TCP/IP	Примеры
Прикладной	I	HTTP, FTP, etc.
Представления		
Сеансовый	II	TCP, UDP
Транспортный
Сетевой	III	IP
Канальный	IV	Ethernet
Физический		Кабель

Контейнеры докер находятся на уровне взаимодействия IP - как будто они находятся в одной IP-сети.
В IP-сети каждое устройство характеризуется адресом из октетов.
Пример сети:

Роутер IP 192.168.0.1

Компьютер
eth0
IP 192.168.0.10
Mask 255.255.0.0
Gateway 192.168.0.1

Network
Address 192.168.0.0
Mask 255.255.0.0
Broadcast 192.168.255.255

IV)
Контейнер после старта попадает в одну из IP-сетей, где он может обмениваться с другими контейнерами.

Контейнер, соединенный с сетью none, не может взаимодействовать с другими контейнерами.
Контейнер из хоста взаимодействует как будто он хост.
Контейнер из сети bridge - сеть по умолчанию - взаимодействует с другими контейнерами.

Создаем два контейнера:
sudo docker run -it --rm --name one ubuntu:14.04
sudo docker run -it --rm --name two ubuntu:14.04

Узнаем IP-адрес командой ifconfig

Один из контейнеров слушает на частоте 12345
nc -l 12345

Второй - отправляет сообщение
nc 172.17.0.2 12345
Hello from one!

V)
В сети бридж нельзя общаться по именам, а также потенциально возможно взаимодействие нежелательных контейнеров друг с другом.
Можно создавать и свои сети!

sudo docker network create custom - создаем свою сеть
sudo docker network inspect custom - инспектируем ее
sudo docker run -it --rm --name one --network=custom ubuntu:14.04
sudo docker run -it --rm --name two --network=custom ubuntu:14.04
создаем два контейнера
(внутри two)ping one
(внутри щne)ping two
и пингуем их по именам!

Задание 4.

sudo docker run -d --rm --name stepik-linking-docker --network=custom parseq/stepik-linking-docker
Запускаем сервер в режиме демона под некоторым именем
sudo docker run -it --rm --network=custom parseq/stepik-linking-docker-client
А затем запускаем клиен в интерактивном режиме! Все!

Рассмотрели процессы взаимодействия с контейнером и между контейнерами!
В интерактивном режиме и через порты можно настраивать сервера и отлаживать приложения. При помощи сетевого взаимодействия можно настраивать взаимодействие приложений.
